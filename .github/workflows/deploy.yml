name: Remote Docker Compose Deploy with .env

on:
  push:
    branches: [main]

jobs:
  deploy1:
    runs-on: ubuntu-latest

    steps:
      - name: SSH into server and deploy using docker compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            echo "Cloning latest repo..."
            rm -rf avito_bot1
            git clone --single-branch --branch main https://github.com/${{ github.repository }}.git avito_bot1
            cd avito_bot1

            echo "Creating .env file..."
            echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN1 }}" > .env
            echo "TELEGRAM_CHAT_IDS=${{ secrets.TELEGRAM_CHAT_IDS1 }}" > .env
            echo "ACCOUNT_OWNER=${{ secrets.ACCOUNT_OWNER1 }}" > .env
            echo "COOKIE_FILE_NAME=${{ secrets.COOKIE_FILE_NAME1 }}" > .env

            echo "Stopping old containers..."
            docker compose down

            echo "Starting containers with fresh build..."
            docker compose up -d --build
  deploy2:
    runs-on: ubuntu-latest

    steps:
      - name: SSH into server and deploy using docker compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            echo "Cloning latest repo..."
            rm -rf avito_bot2
            git clone --single-branch --branch main https://github.com/${{ github.repository }}.git avito_bot2
            cd avito_bot2

            echo "Creating .env file..."
            echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN2 }}" > .env
            echo "TELEGRAM_CHAT_IDS=${{ secrets.TELEGRAM_CHAT_IDS2 }}" > .env
            echo "ACCOUNT_OWNER=${{ secrets.ACCOUNT_OWNER2 }}" > .env
            echo "COOKIE_FILE_NAME=${{ secrets.COOKIE_FILE_NAME2 }}" > .env

            echo "Stopping old containers..."
            docker compose down

            echo "Starting containers with fresh build..."
            docker compose up -d --build